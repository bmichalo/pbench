#!/usr/bin/env python

import os, sys

outfn = os.environ.get("_testlog")
if not outfn:
    sys.stderr.write("WARNING _testlog environment variable not present\n")
    sys.exit(1)
else:
    with open(outfn, "a") as outf:
        outf.write(' '.join(sys.argv) + '\n')

#echo "dir=$1"
#echo "iteration=$2"
#echo "toollabelprefix=$3"
#echo "toolgroup=$4"
#"${count}-${protocol}_${test_type}-${message_size}B-${instance}i"

# FIX-ME how does uperf-postprocess get the test_type?
test_type = os.environ.get("test_type")
if not test_type:
    iteration = sys.argv[2]
    parts = iteration.split('-')
    protocol, test_type = parts[1].split('_')
#print "test_type = %r" % test_type

with open(os.path.join(sys.argv[1], "uperf-average.txt"), "w") as avgf:
    if test_type == "rr":
	avgf.write("Efficiency--trans-sec/CPU-client:perf104=60839.633125\n")
	avgf.write("Efficiency--trans-sec/CPU-server:perf102=56480.851458\n")
	avgf.write("Latency--average_usec=273.141130\n")
	avgf.write("Latency--server_perf104:21000_usec=274.282344\n")
	avgf.write("Resource--CPU-client:perf104=0.060811\n")
	avgf.write("Resource--CPU-server:perf102=0.065768\n")
	avgf.write("Throughput--trans_sec-aggregate=3661.285884\n")
	avgf.write("Throughput--trans_sec-server_perf104:21000=3661.055229\n")
    else:
	avgf.write("Efficiency--Gb-sec/CPU-client:127.0.0.1=4.019334\n")
	avgf.write("Efficiency--Gb-sec/CPU-server:localhost=4.616761\n")
	avgf.write("Resource--CPU-client:127.0.0.1=0.234231\n")
	avgf.write("Resource--CPU-server:localhost=0.203981\n")
	avgf.write("Throughput--Gb_sec-aggregate=0.941393\n")
	avgf.write("Throughput--Gb_sec-server_127.0.0.1:21000=0.941521\n")
